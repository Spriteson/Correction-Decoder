li 0
move r0 rM
li 1
move r1 rM
Loop:
    lw r1               //load mem[1]        0  0  0  0  0 b11 b10 b09
    move rA rM          //move mem[1] to rA
    rxor r2             // rxor b11:9
    lw r0               // load mem[0]       b8 b7 b6 b5 b4 b3  b2  b1
    move rA rM          //move mem[0] ro rA

    rs 4                // 0000 b8 b7 b6 b5
    move rC rS
    rs 7                // 0000000 b8
    move rD rS
    ls 7                // b1 0000000 
    move r7 rS          //r7 = b1
    rs 1                // 0 b8 b7 b6 b5 b4 b3 b2
    move rA rS
    ls 5                // b4 b3 b2 00000
    move rA rS
    rxor r4             // rxor b4-b2
    move rA r4
    move rB rD
    xor r4             // xor b4-b2, b8
    move rA r2         // rxor b11:9
    move rB r4 
    xor r4             // p4, xor b11-8, b4-2

    move rA rC          // b8-b5
    rxor r3             // rxor b8-b5
    move rA r3          
    move rB r2
    xor r8              // p8, xor b11 - b5
    

    
    

